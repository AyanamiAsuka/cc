#以下为策略组[policy]部分
# static 策略组中，你需要手动选择想要的节点/策略组。
# available 策略组将按顺序选择你列表中第一个可用的节点。
# round-robin 策略组，将按列表的顺序轮流使用其中的节点。
# url-latency-benchmark 延迟策略组，选取延迟最优节点。
# dest-hash 策略组，随机负载均衡，但相同域名走固定节点。
# ssid 策略组，将根据你所设定的网络来自动切换节点/策略组
;img-url 参数用于指定策略组图标，可远程，也可本地/iCloud(Quantumult X/Images路径下) （108*108 大小）
;direct/proxy/reject 则只能用本地图标，名字分别为 direct.png, proxy.png,reject.png 放置于 Images 文件夹下即可生效 (108*108 大小)

[policy]
static=🍎 苹果服务, direct, proxy, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Apple.png
static=💻 国外影视, proxy, direct, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/ForeignMedia.png
static=📽 国内视频, direct, proxy, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/DomesticMedia.png
static=🎬 YouTube, proxy, direct, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/YouTube.png
static=📺 Netflix, proxy, direct, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Netflix_Letter.png
static=🌏 国外网站, proxy,direct,🇭🇰️ 香港(正则示范), img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Global.png
static=🕹 终极清单,direct, proxy, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Final.png
static= 🇭🇰️ 香港(正则示范), server-tag-regex= 香港|🇭🇰️|HK|Hong, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/HK.png





static = 🚀 节点选择, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇰🇷 韩国节点, 🚀 手动切换, DIRECT, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Proxy.png 
static = 🚀 手动切换, .*, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Proxy.png
static = 💭 OpenAI, 💭 OpenAI节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇸🇬 狮城节点, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Mouse.png
static = 🍐 Spotify, DIRECT, 🇺🇲 美国节点, 🚀 节点选择, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Spotify.png
static = Ⓜ️ 微软云盘, DIRECT, 🚀 节点选择, 🇺🇲 美国节点, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇰🇷 韩国节点, 🚀 手动切换, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/OneDrive.png
static = Ⓜ️ 微软服务, DIRECT, 🚀 节点选择, 🇺🇲 美国节点, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇰🇷 韩国节点, 🚀 手动切换, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Microsoft.png
static = 📢 谷歌FCM, DIRECT, 🚀 节点选择, 🇺🇲 美国节点, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇰🇷 韩国节点, 🚀 手动切换, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Google.png
static = 🎮 游戏平台, DIRECT, 🚀 节点选择, 🇺🇲 美国节点, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇰🇷 韩国节点, 🚀 手动切换, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Game.png
static = 🍎 苹果服务, DIRECT, 🚀 节点选择, 🇺🇲 美国节点, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇰🇷 韩国节点, 🚀 手动切换, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Apple.png
static = 🎥 奈飞视频, 🎥 奈飞节点, 🚀 节点选择, 🇸🇬 狮城节点, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇰🇷 韩国节点, 🚀 手动切换, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Netflix.png
static = 🎯 全球直连, DIRECT, REJECT, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Direct.png
static = 🛑 广告拦截, REJECT, DIRECT, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Advertising.png
static = 🍃 应用净化, REJECT, DIRECT, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/AdBlack.png
static = 🐟 漏网之鱼, DIRECT, 🚀 节点选择, 🇭🇰 香港节点, 🇨🇳 台湾节点, 🇸🇬 狮城节点, 🇯🇵 日本节点, 🇺🇲 美国节点, 🇰🇷 韩国节点, 🚀 手动切换, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Final.png
static = 💭 OpenAI节点, .*, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Mouse.png
url-latency-benchmark = 🇭🇰 香港节点, server-tag-regex=(?=.*(港|HK|(?i)Hong))^((?!(台湾|日本|新加坡|美国|韩国|狮城|南朝鲜|US|SG|JP|KR|TW|台灣|美國|韓國|獅城)).)*$, check-interval=3600, alive-checking=false, tolerance=80, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Hong_Kong.png
url-latency-benchmark = 🇯🇵 日本节点, server-tag-regex=(?=.*(日本|JP|(?i)Japan))^((?!(香港|台湾|新加坡|美国|韩国|狮城|南朝鲜|US|SG|KR|HK|TW|台灣|美國|韓國|獅城)).)*$, check-interval=3600, alive-checking=false, tolerance=80, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Japan.png
url-latency-benchmark = 🇺🇲 美国节点, server-tag-regex=(?=.*(美国|美國|US|洛杉矶|西雅图|(?i)States|American))^((?!(香港|台湾|日本|新加坡|韩国|狮城|南朝鲜|SG|JP|KR|HK|TW|台灣|韓國|獅城)).)*$, check-interval=3600, alive-checking=false, tolerance=100, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/United_States.png
url-latency-benchmark = 🇸🇬 狮城节点, server-tag-regex=(?=.*(新加坡|狮城|SG|(?i)Singapore))^((?!(香港|台湾|日本|美国|韩国|南朝鲜|US|JP|KR|HK|TW|台灣|美國|韓國)).)*$, check-interval=3600, alive-checking=false, tolerance=80, img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Singapore.png
static=🎥 奈飞节点, (NF|奈飞|解锁|Netflix|NETFLIX|Media), img-url= https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Netflix.png









#server-tag-regex 以及 resource-tag-regex 参数用于正则筛选来建立策略组
#具体可参见教程部分: https://shrtm.nu/DAFP

#以下是quantumultX的3普通种策略组类型写法，也可以用正则参数 server-tag-regex 或者 resource-tag-regex 来筛选
;static=policy-name-1, Sample-A, Sample-B, Sample-C
;available=policy-name-2, Sample-A, Sample-B, Sample-C
;round-robin=policy-name-3, Sample-A, Sample-B, Sample-C
;url-latency-benchmark=policy-name-4, Sample-A, Sample-B, Sample-C
;dest-hash=policy-name-5, Sample-A, Sample-B, Sample-C
#下面是ssid策略组示范
;ssid=policy-name-4, Sample-A, Sample-B, LINK_22E171:Sample-B, LINK_22E172:Sample-C









[custom]
;去广告：支持
;自动测速：支持
;微软分流：支持
;苹果分流：支持
;增强中国IP段：支持
;增强国外GFW：支持

;设置规则标志位
ruleset=💭 OpenAI,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/OpenAI_vj.list
ruleset=🍐 Spotify,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/Spotify_vj.list
ruleset=🎯 全球直连,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/LocalAreaNetwork_vj.list
ruleset=🎯 全球直连,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/Download_vj.list
ruleset=🎯 全球直连,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/UnBan_vj.list
ruleset=🎯 全球直连,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/ChinaDomain_vj.list
ruleset=🎯 全球直连,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/ChinaCompanyIp_vj.list
ruleset=🛑 广告拦截,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/BanAD_vj.list
ruleset=🍃 应用净化,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/BanProgramAD_vj.list
ruleset=🎯 全球直连,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/GoogleCN_vj.list
ruleset=🎯 全球直连,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/SteamCN_vj.list
ruleset=Ⓜ️ 微软云盘,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/OneDrive_vj.list
ruleset=Ⓜ️ 微软服务,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/Microsoft_vj.list
ruleset=🍎 苹果服务,https://raw.githubusercontent.com/Pukia-vj/cc/main/Apple_vj.list
ruleset=📢 谷歌FCM,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/GoogleFCM_vj.list
ruleset=🎯 全球直连,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/NetEaseMusic_vj.list
ruleset=🎥 奈飞视频,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/TikTok_vj_vj.list
ruleset=🎮 游戏平台,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/Epic_vj.list
ruleset=🎮 游戏平台,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/Origin_vj.list
ruleset=🎮 游戏平台,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/Sony_vj.list
ruleset=🎮 游戏平台,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/Steam_vj.list
ruleset=🎮 游戏平台,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/Nintendo_vj.list
ruleset=🎥 奈飞视频,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/Netflix_vj.list
ruleset=🎯 全球直连,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/BilibiliHMT_vj.list
ruleset=🎯 全球直连,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/Bilibili_vj.list
ruleset=🎯 全球直连,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/ChinaMedia_vj.list
ruleset=🎥 奈飞视频,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/ProxyMedia_vj.list
ruleset=🚀 节点选择,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/ProxyGFWlist_vj.list
ruleset=🚀 节点选择,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/Telegram_vj.list
ruleset=🚀 节点选择,https://raw.githubusercontent.com/Pukia-vj/cc/main/rules/YouTube_vj.list
ruleset=🎯 全球直连,[]GEOIP,CN
ruleset=🐟 漏网之鱼,[]FINAL
;设置规则标志位




enable_rule_generator=true
overwrite_original_rules=true
